/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ir_gui;

import Boolean.Files;
import Boolean.table2;
import invertedIndex.*;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import postional.PositionVersion2;

/**
 *
 * @author Ansam
 */
public class Matched_Doc extends javax.swing.JFrame {

    /**
     * Creates new form Matched_Doc
     */
    Output2 Query;
    int taskno;
    ArrayList<File> files;
    Task2 T;
    PositionVersion2 pos;
    table2 t;
    public Matched_Doc(Output2 Query,int taskno,ArrayList<String> res,ArrayList<File> files,Task2 T,PositionVersion2 pos,table2 t) {
        initComponents();
        this.Query=Query;
        this.taskno=taskno;
        this.files=files;
        this.T=T;
        this.pos=pos;
        this.t=t;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            
            
            if(taskno==2)
            {
                model.addColumn("Documents");
            for (Integer intersect:Query.set) {
                Vector<Object> data = new Vector<Object>();
                data.add(files.get(intersect).getName());

                model.addRow(data);

            }
            }
            if(taskno==1)
            {
                model.addColumn("Documents");
                if(res.get(0).length()==1)
                {
                    for (int i = 0; i < res.size(); i++) {
                    Vector<Object> data = new Vector<Object>();
                        if(res.get(i).equals("1"))
                        { 
                            data.add("Document "+(i+1));
                            model.addRow(data);
                        }
                    }
            }
                else
                {
                        for (int i = 0; i < res.get(0).length(); i++) {
                    Vector<Object> data = new Vector<Object>();
                    if(res.get(0).charAt(i)=='1')
                    { 
                        data.add("Document "+(i+1));

                    model.addRow(data);
                    }
                    }
                }
            }
            if(taskno==3)
            {
               model.addColumn("Documents");
               ArrayList<String> docs=new ArrayList<>();
               for (int i = 0; i < pos.Doc.size(); i++) {
                Vector<Object> data = new Vector<Object>();
                if(i!=0&& !docs.contains(pos.Doc.get(i).doc.Docname))
                { 
                    for(File f: files )
                    {
                        if(f.getPath().equals(pos.Doc.get(i).doc.Docname))
                        {
                            data.add(f.getName());
                        model.addRow(data);
                        docs.add(pos.Doc.get(i).doc.Docname);
                        break;
                        }
                    }
                    
                    
                }
                else if(i==0)
                {
                    for(File f: files )
                    {
                        if(f.getPath().equals(pos.Doc.get(i).doc.Docname))
                        {
                            data.add(f.getName());
                        model.addRow(data);
                        docs.add(pos.Doc.get(i).doc.Docname);
                        break;
                        }
                    }
                }

                
                }
               
            }
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 0, 48)); // NOI18N
        jLabel1.setText("Matched Documents");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("HOME");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("New Query");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:    
        new Home().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(taskno==1)
        {
            try {
                Files f = new Files();
            } catch (IOException ex) {
                Logger.getLogger(Matched_Doc.class.getName()).log(Level.SEVERE, null, ex);
            }
      
                    


        new query(null,1,t,files,null).setVisible(true);
        this.setVisible(false);
        }
        if(taskno==2)
        {
                    new query(T,2,null,files,null).setVisible(true);
                    this.setVisible(false);

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
